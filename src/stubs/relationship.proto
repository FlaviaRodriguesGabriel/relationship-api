syntax = "proto3";

package stubs.relationship;

import "google/protobuf/timestamp.proto";

message BusinessPartnershipMessage {
  RelationshipType relationship_type = 1;
  CompanyMessage company_message = 2;
  repeated PartnerMessage partner_message = 3;
}

enum RelationshipType {
  UNKNOWN = 0;
  PARTNERSHIP = 1;
  REPRESENTATIVES = 2;
  PROSECUTORS = 3;
  RELATIVES = 4;
}

message CompanyMessage {
  string company_id = 1;
  string person_type = 2;
  string cpf_cnpj = 3;
  string name = 4;
  google.protobuf.Timestamp included_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CompletenessMessage {
  int32 completeness_level = 1;
  string additional_information = 2;
  DiffMessage diff_message = 3;
  google.protobuf.Timestamp validated_at = 7;
}

message DiffMessage {
  bool open_diff = 1;
  string journey_id = 2;
  google.protobuf.Timestamp date = 3;
}

message PartnerMessage {
  string partner_id = 1;
  string tenant_id = 2;
  double participation_percentage = 3;
  string cpf_cnpj = 4;
  string person_type = 5;
  string name = 6;
  string social_name = 7;
  CompletenessMessage completeness = 8;
  google.protobuf.Timestamp included_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

service PartnershipService {
  rpc AddPartnership(BusinessPartnershipMessage) returns (BusinessPartnershipMessage);
  rpc GetPartnership(BusinessPartnershipMessage) returns (BusinessPartnershipMessage);
  rpc UpdatePartnership(BusinessPartnershipMessage) returns (BusinessPartnershipMessage);
  rpc DeletePartnership(BusinessPartnershipMessage) returns (BusinessPartnershipMessage);
}